<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.kdh.mapper.UserMapper">
	<select id="selectMemberInfoYn" resultType="int">
		<![CDATA[ 
			SELECT 
				COUNT(*) AS cnt
			FROM
				user_list_TB
			WHERE
				user_id = #{user_id}
			AND
				user_pw = #{user_pw}
		]]>
	</select>
	<select id="loadUser" parameterType="String"
		resultType="com.kdh.domain.UserVo">
	<![CDATA[ 
	SELECT
		*
	FROM
		user_list_TB
	WHERE
		user_id = #{user_id}
	AND
		deleted_yn = 'N'
	]]>
	</select>

	<select id="selectPostSeqNextVal" resultType="long">
		SELECT
		post_seq.NEXTVAL FROM dual
	</select>

	<insert id="insertPost" parameterType="com.kdh.domain.PostVo">
    <![CDATA[
        INSERT INTO post_TB
            (post_idx, post_id, post_name, post_title, post_contents, post_created_date, post_updated_date)
        VALUES
            (#{post_idx}, #{post_id}, #{post_name}, #{post_title}, #{post_contents}, TO_CHAR(SYSDATE, 'YYYY-MM-DD HH24:MI:SS'), TO_CHAR(SYSDATE, 'YYYY-MM-DD HH24:MI:SS'))
    ]]>
	</insert>

	<insert id="insertFile" parameterType="com.kdh.domain.FileVo">
		INSERT INTO POST_FILE_TB
		(original_name, file_path, file_size,
		UPLOAD_DATE, POST_IDX)
		VALUES
		(#{original_Name}, #{file_Path}, #{file_Size}, TO_CHAR(SYSDATE, 'YYYY-MM-DD HH24:MI:SS'), #{post_Idx})
	</insert>


	<select id="viewProfile" parameterType="String"
		resultType="com.kdh.domain.UserVo">
	<![CDATA[ 
	SELECT
		user_id, user_pw, user_name, user_email, user_phone, user_created_date, user_updated_date
	FROM
		user_list_TB
	WHERE
		user_Id = #{user_Id}
	AND
		deleted_yn = 'N'
	]]>
	</select>
	<insert id="signin" parameterType="com.kdh.domain.UserVo">
		<![CDATA[
			INSERT INTO user_list_TB
				(user_idx, user_id, user_pw, user_name, user_email, user_phone, user_created_date, user_updated_date)
			VALUES
				((SELECT NVL(MAX(user_idx),0) + 1 FROM user_list_TB), #{user_id}, #{user_pw}, #{user_name}, #{user_email}, #{user_phone}, TO_CHAR(SYSDATE, 'YYYY-MM-DD HH24:MI:SS'), TO_CHAR(SYSDATE, 'YYYY-MM-DD HH24:MI:SS'))
		]]>
	</insert>
	<select id="viewPostById" parameterType="String">
		SELECT post_idx,
		post_id, post_name, post_title,
		post_contents,
		post_likes,
		post_created_date, post_updated_date, deleted_yn
		FROM POST_TB
		WHERE
		POST_ID = #{user_id}

	</select>
	<select id="viewPost" parameterType="String"
		resultType="com.kdh.domain.PostVo">
		<![CDATA[
WITH CombinedPosts AS (
  SELECT
    post_idx, post_id, post_name, post_title, post_contents,
    post_likes, post_created_date, post_updated_date, deleted_yn, 1 AS priority
  FROM
    post_TB p LEFT JOIN follow_TB f ON p.post_id = f.follower_id
  WHERE
    (p.post_id = #{user_id} OR f.follower_id = #{user_id})
    AND p.deleted_yn = 'N'
    AND TO_DATE(post_updated_date, 'YYYY-MM-DD HH24:MI:SS') >= (SYSDATE - 7)
  UNION
  SELECT
    post_idx, post_id, post_name, post_title, post_contents,
    post_likes, post_created_date, post_updated_date, deleted_yn, 2 AS priority
  FROM
    post_TB
  WHERE
    deleted_yn = 'N'
    AND TO_DATE(post_updated_date, 'YYYY-MM-DD HH24:MI:SS') >= (SYSDATE - 7)
),
NumberedPosts AS (
  SELECT
    post_idx, post_id, post_name, post_title, post_contents,
    post_likes, post_created_date, post_updated_date, deleted_yn, priority,
    ROW_NUMBER() OVER(PARTITION BY post_idx, post_id, post_name, post_title, post_contents, post_likes, post_created_date, post_updated_date, deleted_yn ORDER BY priority) AS rn
  FROM
    CombinedPosts
)
SELECT
  post_idx, post_id, post_name, post_title, post_contents,
  post_likes, post_created_date, post_updated_date, deleted_yn, priority
FROM
  NumberedPosts
WHERE
  rn = 1
ORDER BY
  priority,
  CASE WHEN priority = 1 THEN TO_DATE(post_created_date, 'YYYY-MM-DD HH24:MI:SS') END DESC,
  CASE WHEN priority = 2 THEN post_likes END DESC,
  TO_DATE(post_updated_date, 'YYYY-MM-DD HH24:MI:SS') DESC

		]]>
	</select>
	<select id="viewPostByLikes" parameterType="String"
		resultType="com.kdh.domain.PostVo">
		<![CDATA[
			SELECT DISTINCT
			post_idx, post_id, post_name, post_title, post_contents, post_likes, post_created_date, post_updated_date, deleted_yn 
			FROM 
			post_TB p
			WHERE
			deleted_yn = 'N'
			ORDER BY post_likes, post_created_date desc
		]]>
	</select>
	<update id="updateinfo">
		<![CDATA[
			UPDATE
				user_list_TB
			SET
				user_name = #{user_name}, user_email = #{user_email}, user_phone = #{user_phone}
			WHERE
				user_id = #{user_id}
			AND
				deleted_yn = 'N'
		]]>
	</update>
	<update id="updatepw">
		<![CDATA[
			UPDATE
				user_list_TB
			SET
				user_pw = #{user_pw}
			WHERE
				user_id = #{user_id}
			AND
				deleted_yn = 'N'
		]]>
	</update>
	<select id="viewPostFileList" parameterType="long"
		resultType="com.kdh.domain.FileVo">
	<![CDATA[	
	SELECT
    f.postfile_idx, f.post_idx, f.original_name, f.file_path,
    TO_CHAR(ROUND(f.file_size / 1024)) AS file_size
	FROM 
	    post_file_TB f
	JOIN
	    post_TB p ON f.post_idx = p.post_idx
	WHERE 
	    f.post_idx = #{post_idx}
	AND  
	    f.deleted_yn = 'N'	
		]]>
	</select>
	<select id="view" parameterType="long">
		select * from POST_TB where
		post_idx = #{post_idx}
	</select>

	<update id="updatePost" parameterType="com.kdh.domain.PostVo">
	<![CDATA[	
		UPDATE
		POST_TB
		SET
		POST_TITLE = #{post_title},
		POST_CONTENTS = #{post_contents},
		post_updated_date = TO_CHAR(SYSDATE, 'YYYY-MM-DD HH24:MI:SS')
		where post_idx = #{post_idx}
		AND
		deleted_yn = 'N'
				]]>
	</update>
	<delete id="deleteFiles">
		DELETE FROM POST_FILE_TB WHERE post_idx = #{post_idx}
	</delete>

	<insert id="insertLike">
		insert into LIKES_TB (LIKES_IDX, POST_IDX, USER_IDX)
		values((SELECT NVL(MAX(LIKES_IDX),0) + 1 FROM
		LIKES_TB), #{post_idx},
		#{user_idx})
	</insert>

	<delete id="deleteLike">
		delete from LIKES_TB where post_idx =
		#{post_idx} AND
		USER_IDX = #{user_idx}
	</delete>

	<select id="checkLike" resultType="int">
		select count(*) from
		LIKES_TB
		where USER_IDX = #{arg0} and POST_IDX =
		#{arg1}
	</select>
	<update id="updatePostLikes" parameterType="int">
	<![CDATA[	
		UPDATE
		POST_TB
		SET
		POST_LIKES = (select count(*) from LIKES_TB where post_idx = #{post_idx})
		where post_idx = #{post_idx}
		AND
		deleted_yn = 'N'
				]]>
	</update>
	<select id="countLike" resultType="int">
		select count(*) from
		LIKES_TB
		where POST_IDX = #{post_idx}
	</select>
	<select id="getPostByIdx" parameterType="int">
		select POST_IDX,
		POST_ID, POST_NAME, POST_TITLE, POST_CONTENTS, POST_LIKES,
		POST_CREATED_DATE, POST_UPDATED_DATE, DELETED_YN
		POST_TB
		where POST_IDX
		= #{post_idx}
	</select>
	<select id="getCommentList" parameterType="Long">
		select COMMENT_IDX, COMMENT_CONTENT, FROM_ID, FROM_NAME, TO_POST_IDX, CREATED_DATE, UPDATED_DATE
		FROM COMMENT_TB
		where TO_POST_IDX = #{post_idx}
	</select>
	<insert id="insertNoti"
		parameterType="com.kdh.domain.NotificationVo">
		insert into NOTIFICATION_TB (NOTIFICATION_IDX,
		TO_ID,
		MESSAGE, CREATED_DATE, FROM_ID)
		values(#{notification_idx}, #{to_id},
		1, TO_CHAR(SYSDATE, 'YYYY-MM-DD HH24:MI:SS'), #{from_id})
	</insert>
	<select id="getNotis" parameterType="String"
		resultType="com.kdh.domain.NotificationVo">
		Select NOTIFICATION_IDX, TO_ID, CHECK_YN, MESSAGE,
		CREATED_DATE, FROM_ID
		FROM NOTIFICATION_TB
		WHERE TO_ID = #{user_id} AND
		CHECK_YN = 'N'
	</select>
	<update id="updateNoti">
		<![CDATA[
			UPDATE
				NOTIFICATION_TB
			SET
				CHECK_YN = 'Y'
			WHERE
				NOTIFICATION_IDX = #{notification_idx}
		]]>
	</update>
	<select id="selectMaxNotificationIndex">
		SELECT NVL(MAX(NOTIFICATION_IDX),0) + 1 FROM NOTIFICATION_TB
	</select>
	<insert id="insertPostNoti"
		parameterType="com.kdh.domain.PostnotiVo">
		insert into POST_NOTI_TB (POSTNOTI_IDX, FROM_ID, TO_ID,
		POST_IDX, NOTIFICATION_IDX)
		values((SELECT NVL(MAX(POSTNOTI_IDX),0) + 1
		FROM POST_NOTI_TB), #{from_id},#{to_id}, #{post_idx},
		#{notification_idx})
	</insert>

	<select id="findPostNotibyIdx">
		Select *
		from post_noti_tb
		where notification_idx = #{notification_idx}
	</select>
	<select id="findPostbyIdx">
		Select *
		from POST_TB
		where POST_IDX = #{post_idx}
	</select>
		<insert id="insertComment"
		parameterType="com.kdh.domain.CommentVo">
		insert into COMMENT_TB (COMMENT_IDX, COMMENT_CONTENT, FROM_ID, FROM_NAME, TO_POST_IDX, CREATED_DATE, UPDATED_DATE)
		values((SELECT NVL(MAX(COMMENT_IDX),0) + 1 FROM COMMENT_TB), #{comment_content},#{from_id}, #{from_name}, #{to_post_idx}, TO_CHAR(SYSDATE, 'YYYY-MM-DD HH24:MI:SS'), TO_CHAR(SYSDATE, 'YYYY-MM-DD HH24:MI:SS') )
	</insert>
	
	
</mapper>